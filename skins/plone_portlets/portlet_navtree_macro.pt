<tal:master define="level options/level|python:0;
                    children options/children | nothing;
                    bottomLevel options/bottomLevel | nothing;
                    normalizeString nocall:context/plone_utils/normalizeString;
                    viewActions site_properties/typesUseViewActionInListings|python:()">

<metal:main define-macro="nav_main">
<tal:navitem repeat="node children">
<li class="navTreeItem visualNoMarker"
    tal:define="children   node/children;
                item       node/item;
                useView    python:item.portal_type in viewActions;
                itemUrl    python:test(useView, item.getURL() + '/view', item.getURL());
                linkRemote python:item.getRemoteUrl and item.Creator != member.getId();
                isCurrent  node/currentItem;"
    tal:condition="python: bottomLevel <= 0 or level < bottomLevel-1">

    <tal:level define="item_type_class     python: 'contenttype-' + normalizeString(item.portal_type);
                       item_wf_state_class python: 'state-' + normalizeString(item.review_state);">

    <div tal:attributes="class item_type_class"
         tal:define="itemClass string:$item_wf_state_class visualIconPadding;
                     itemClass python:test(isCurrent, itemClass + ' navTreeCurrentItem', itemClass);">
        
        <a tal:attributes="href python:test(linkRemote, item.getRemoteUrl, itemUrl);
                           title item/Description;
                           class string:$itemClass"
            tal:content="item/Title">
            Selected Item Title 
        </a>
        
    </div>

    <ul tal:attributes="class python:'navTree navTreeLevel'+str(level)"
        tal:define="level python:level+1;"
        tal:condition="nocall:children">
        <metal:recurse use-macro="here/portlet_navtree_macro/macros/nav_main"/>
    </ul>
    </tal:level>
</li>
</tal:navitem>
</metal:main>
</tal:master>