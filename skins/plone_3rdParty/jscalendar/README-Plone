README-Plone

This is Mihai Bazon's <mishoo@infoiasi.ro> excellent DHTML Calendar
Widget, ("jscalendar") available in original from:
http://dynarch.com/mishoo/calendar/ (see README for licensing
information).

For version 0.9.5 of jscalendar, included in Plone 2.0, the
integration from the previous jscalendar versions was changed
slightly.

For distribution with Plone, we have only flattened the directory
hierarchy and added this file (README-Plone) and all of the .metadata
files. Everything else is unchanged. This means the subdirectories
"doc", "doc/html" and "lang" have been removed, with their contents
moved to the top jscalendar directory instead. This is only in order
to avoid making "doc", "doc/html" and "lang" available from other
url's on a site, under Zope's acquisition logic.

Plone integration
-----------------

- i18n

  jscalendar uses its own translations, i.e. not plone-i18n. The
  jscalendar translations are available in the various calendar-*js
  files.

- skins

  jscalendar comes with several default skins, if you want to change
  the skin, please customize Plone's plone_templates/header.pt.

- references in Plone files:

  header.pt
      - includes calendar.js, a style sheet and a translation.
  calendar_slot.pt
      - has a javascript onclick handler that calls showJsCalendar in
        plone_javascripts.js
  plone_javascripts.js
      - function showJsCalendar (mimics Calendar.setup() as an ordinary
        function instead of as a handler)
      - function update_date_field

- other

  calendar-setup*.js isn't used by the Plone integration (it would require
  adding a little javascript after the </form> tag, which seems
  difficult to do with CMFFormController, as the script still needs to
  refer to the controls by id. Added .metadata files for it anyway.

Upgrading Plone's jscalendar
----------------------------

When a new upstream version is available it should be simple to
integrate it with Plone. Just flatten its directory hierarchy and run
"diff -ru jscalendar jscalendar-x.y.x", to see if there are any
changes that might be significant to the Plone integration. Pay close
attention to calendar-setup.js. Any changes there might have to be
reflected in plone_javascripts.js.

