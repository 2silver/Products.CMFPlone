<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">

  <metal:block fill-slot="top_slot">
    <metal:block tal:define="dummy python:request.RESPONSE.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate, post-check=0, pre-check=0');
                             dummy python:request.set('enable_border', 1);" />
  </metal:block>

  <metal:calendar fill-slot="javascript_head_slot">
    <!-- ECMAScript calendar -->
    <style type="text/css" media="all"
	    tal:content="string:@import url($portal_url/jscalendar/calendar-system.css);"></style>
    <script type="text/javascript"
	    tal:attributes="src string:$portal_url/jscalendar/calendar_stripped.js"></script>
    <script type="text/javascript" charset="iso-8859-1"
	    tal:condition="exists: portal/jscalendar/calendar-en.js"
	    tal:attributes="src string:$portal_url/jscalendar/calendar-en.js"></script>
  </metal:calendar>

  <body>

    <!--
      NOTE: This form does two things.  It will allow you to publish
      multiple files (recursively) and it will allow for you to
      publish a specific piece of content.  This flexibility comes
      with some complexity.  How we tell is if we have a list of 'ids'
      in the REQUEST to be published
    -->

    <div metal:fill-slot="main"
         tal:define="errors options/state/getErrors;
                     review_state wf_state;
		     contentTypes python: here.getAllowedTypes(); 
		     num_types python: len(contentTypes)
		     " >

      <h1 i18n:translate="heading_publishing_process">Publishing process</h1>

      <p i18n:translate="description_publishing_process">
        An item's status (also called its review state) determines who
        can see it.  A <strong>private</strong> item can only be
        viewed by its Owner and by the site management. Only
        <strong>published</strong> items are available to the general
        member base and anonymous visitors. To make an item published,
        it has to be reviewed by one of the site's Reviewers. You can
        request that an item be reviewed by <strong>submitting it for
        review</strong>.
        <br />
        Another way to control the visibility of an item is with its
        <strong>effective date</strong>. An item is not publicly
        available before its effective date, <em>even if its status is
        <strong>published</strong></em>.
      </p>

      <form id="edit_form"
            name="edit_form"
            method="post"
            action="content_status_modify"
            tal:attributes="action python:test(isFolder,template.getId(),'%s/%s' % (here.getId(),template.getId()))">

        <fieldset>

          <legend i18n:translate="legend_publishing_details">Publishing Details</legend>

          <div class="field" tal:condition="request/ids|nothing">
            <label for="" i18n:translate="label_affected_content">Affected content</label>
            <div tal:define="physical_path python:'/'.join(here.getPhysicalPath());
                             dummy python:request.set('ids_checked', 1);
                             containedobjects python:[ getattr(here, id)
                             for id in request.get('ids', [])
                             if id in here.objectIds() ];
                             batch containedobjects;
                             global folders_in_publishing python:[o.getId() for o in batch if o.isPrincipiaFolderish];"
                 tal:condition="batch">
              <table summary="" metal:use-macro="here/folder_contents/macros/folder_listing">
              </table>
            </div>
          </div>

          <div class="field formSingleCheckbox"
               tal:condition="folders_in_publishing|nothing">

            <label for="include_subfolders" i18n:translate="label_include_subfolders">
              Include subfolders
            </label>

            <div class="formHelp"
                 i18n:translate="help_include_subfolders">
              If checked, Plone will attempt to publish all content in subfolders.
            </div>

            <input type="checkbox"
                   class="formElement"
                   id="include_subfolders"
                   name="include_subfolders"
                   tabindex=""
                   tal:attributes="tabindex tabindex/next;"
                   />
          </div>

          <div class="field" tal:define="error errors/effective_date | nothing;">
            <label i18n:translate="label_effective_date">Effective Date</label>
            <div class="formHelp"
                 i18n:translate="help_effective_date">
              The date when the item will be available (of course it
              needs to be published too).  If no date is selected the
              item will be effective immediately.
            </div>

            <div tal:content="error">Validation error output</div>

            <div tal:define="inputname  string:effective_date;
                             formname   string:edit_form;
                             effective here/EffectiveDate;
                             inputvalue python:test(effective and effective!='None', effective, request.get('effective_date', ''));
                             tabindex tabindex/next;"
                 tal:attributes="class python:test(error, 'field error', 'field')">

              <div metal:use-macro="here/calendar_slot/macros/calendarDatePickerBox">
                calendar pop-up
              </div>

            </div>
          </div>

          <div class="field"
               tal:define="error errors/expiration_date | nothing;">
            <label i18n:translate="label_expiration_date">Expiration Date</label>
            <div class="formHelp"
                 i18n:translate="help_expiration_date">
              The date when the item expires. This will automatically
              make the item invisible for others at the given date.
              If no date is chosen, it will never expire.
            </div>

            <div tal:content="error">Validation error output</div>

            <div class="field">
              <div tal:define="inputname  string:expiration_date;
                               formname   string:edit_form;
                               expiration here/ExpirationDate;
                               inputvalue python:test(expiration and expiration!='None', expiration, request.get('expiration_date', ''));
                               tabindex tabindex/next;"
                   tal:attributes="class python:test(error, 'field error', 'field')">

                <div metal:use-macro="here/calendar_slot/macros/calendarDatePickerBox">
                  calendar pop-up
                </div>
              </div>
            </div>
          </div>

          <div class="field">
            <label i18n:translate="label_comments">Comments</label>

            <div class="formHelp"
                 i18n:translate="help_publishing_comments">
              Will be added to the publishing history. If multiple
              items are selected, this comment will be attached to all
              of them.
            </div>
            <textarea id="comment"
                      name="comment"
                      cols="60"
                      rows="5"
                      tabindex=""
                      tal:attributes="tabindex tabindex/next;"
                      tal:content="request/comment|nothing"
                      ></textarea>
          </div>

          <div class="field">
            <label i18n:translate="label_change_status">Change State</label>
            <div class="formHelp"
                 i18n:translate="help_change_status">
              Select the new state for the selected items.
            </div>

            <div tal:define="tabindex tabindex/next;
                             error_workflow_action errors/workflow_action|nothing;
                             objs request/ids|nothing;
                             review_state_label string:No change;
                             target python:test(objs, objs, here);"
                 tal:attributes="class python:test(error_workflow_action, 'field error', 'field')">

              <div tal:condition="error_workflow_action">
                <tal:block i18n:translate="text_error" content="error_workflow_action">Error</tal:block>
                <br />
              </div>

              <span tal:replace="nothing">
                For usability we will want to signify what state we
                are currently in. DCWorkflow only returns what t
                ransitions are available.  But we want to visually
                represent what *state* we are currently in along with
                possible transitions.
              </span>

              <input class="noborder"
                     id=""
                     type="radio"
                     name="workflow_action"
                     title=""
                     value=""
                     tal:attributes="value review_state;
                                     title review_state;
                                     checked python:test(request.get('workflow_action', review_state)==review_state,1,0);" />
              <label for=""
                     i18n:translate=""
                     tal:attributes="for review_state;"
                     tal:content="review_state_label"
                     >Transition Name</label>
                     <br />

                     <tal:block define="global transitions python:wtool.getTransitionsFor(target, here)"
                                repeat="transition transitions">
                       <input class="noborder"
                              id=""
                              type="radio"
                              name="workflow_action"
                              title=""
                              value=""
                              i18n:attributes="title"
                              tal:attributes="value transition/id;
                                              id    transition/id;
                                              title transition/name;
                                              checked python:test(transition.get('id') == request.get('workflow_action', ''), 'checked', None)" />
                       <label for=""
                              i18n:translate=""
                              tal:attributes="for transition/id;"
                              tal:content="transition/name"
                              >Transition Name</label>
                              <br />
                     </tal:block>

            </div>

          </div>

          <div class="formControls">
            <input class="context"
                   type="submit"
                   name="form.button.Publish"
                   value="Save"
                   i18n:attributes="value"
                   tal:attributes="tabindex tabindex/next;"
                   tal:condition="not:request/ids|nothing"/>
            <input class="context"
                   type="submit"
                   name="form.button.FolderPublish"
                   value="Save"
                   i18n:attributes="value"
                   tal:attributes="tabindex tabindex/next;"
                   tal:condition="request/ids|nothing"/>
            <input class="standalone"
                   type="submit"
                   name="form.button.Cancel"
                   value="Cancel"
                   i18n:attributes="value"
                   tal:attributes="tabindex tabindex/next;"/>
          </div>


          <span tal:replace="nothing">
            ##### HIDDEN VARIABLES FOR THE FORM_TOOL -- CUT AND PASTE
            THESE INTO YOUR FORM ####
          </span>
          <input type="hidden" name="form.submitted" value="1" />

        </fieldset>

      </form>

      <div tal:condition="not: request/ids|nothing">

        <table class="listing nosort" summary="Review History"
               i18n:attributes="summary"
               tal:define="review_history python:wtool.getInfoFor(here, 'review_history', [])"
               tal:condition="python:[review for review in review_history if review.get('action','')]">

          <tr>
            <th i18n:translate="listingheader_action">Action</th>
            <th i18n:translate="listingheader_performed_by">Performed&nbsp;by</th>
            <th i18n:translate="listingheader_date_and_time">Date&nbsp;and&nbsp;Time</th>
            <th i18n:translate="listingheader_comment">Comment</th>
          </tr>

          <metal:block tal:define="reverseList nocall:portal/reverseList"
                       tal:repeat="items review_history">
            <tr tal:define="review_history python: reverseList(review_history);
                            global odd repeat/items/odd; global rhComments items/comments;"
                tal:attributes="class python:test(odd, 'even', 'odd')"
                tal:condition="items/action">
              <td i18n:translate="">
                <span tal:replace="items/action" />
              </td>

              <td>
                <a href="/Members/runyaga"
                   tal:attributes="href python: mtool.getHomeUrl(items.get('actor'), '')"
                   tal:content="items/actor">
                  runyaga
                </a>
              </td>

              <td>
                <span tal:replace="python: items['time']" />
                <span tal:condition="items/effective_date|nothing">
                  (<span i18n:translate="label_publishing_effective" tal:omit-tag="">effective</span>:
                  <span tal:replace="python: items['effective_date']"></span>)
                </span>
              </td>

              <td>
                <span tal:condition="rhComments">
                  <span tal:replace="rhComments"> some comments </span>
                </span>

                <span tal:condition="not: rhComments" i18n:translate="no_comments">
                  No comments.
                </span>
              </td>
            </tr>
          </metal:block>
        </table>

      </div>

      <div metal:use-macro="here/document_byline/macros/byline">
        Get the byline - contains details about author and modification date.
      </div>

    </div>

  </body>
</html>
