<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US"
      lang="en-US"
      metal:use-macro="here/prefs_main_template/macros/master">

<tal:block metal:fill-slot="head_slot">
   <tal:block tal:define="dummy python:request.set('disable_border',1)" />
</tal:block>

<body>

<div metal:fill-slot="prefs_configlet_main"
     tal:define="errors python:request.get('errors', {});
                Batch python:modules['ZTUtils'].Batch;
                b_start python:request.get('b_start',0);
                portal_roles mtool/getPortalRoles;"
     tal:condition="here/rejectAnonymous" >

<!-- ugly way of simulating real actions on the groups/user pages until we have
     real objects. -->
<ul id="contentTabs">
  <li class="">
    <a href="plone_control_panel"
       i18n:translate="">Plone Setup</a>
  </li>
  <li class="">
    <a href=""
       tal:attributes="href string: prefs_users_overview"
       i18n:translate="">Users</a>
  </li>
  <li class="selected">
    <a href=""
       tal:attributes="href string:${template/id}"
       i18n:translate="">Groups</a>
  </li>
</ul>
<div id="contentBar">&nbsp;</div>
<!-- End of tabs -->

<div class="document editable">

    <h1 i18n:translate="heading_groups_management">Groups Management</h1>

    <form action=""
          name="groups"
          method="post"
          tal:attributes="action here/absolute_url"
          tal:define="groups python:Batch(here.portal_groups.listGroups(), 25, int(b_start), orphan=1)">

    <!-- jcc says: this is my solution to a confusing situation. There
    are other solutions, but this and the add form should not be
    adjacent visually. Do we even need a quicksearch? -->

    <span tal:omit-tag="" i18n:translate="label_quick_search">Quick search</span>:
    <input class="quickSearch"
           tabindex=""
           type="text"
           name="searchstring"
           value=""
           tal:attributes="tabindex tabindex/next;"
           />

    <input type="hidden" name="searchonly" value="groups" />
    <input type="submit"
           class="context"
           name="prefs_user_group_search_form:method"
           value="Search"
           tabindex=""
           i18n:attributes="value"
           tal:attributes="tabindex tabindex/next;" />

    <p i18n:translate="description_groups_management">
      Groups are logical collections of users, like departments and
      business units.  They are not directly related to permissions on
      a global level, you normally use Roles for that - and let
      certain Groups have a particular role.
    </p>

    <input tabindex=""
           type="text"
           name="addname"
           value=""
           tal:attributes="tabindex tabindex/next;"
           />

   <input class="context add"
          tabindex=""
          type="submit"
          name="prefs_group_add:method"
          value="Add New Group"
          tal:attributes="tabindex tabindex/next;"
          i18n:attributes="value"
          />

        <table class="listing"
               tal:condition="groups">

            <tr>
                <th rowspan="2" i18n:translate="listingheader_group_name">Group name</th>
                <th colspan="3"
                    tal:attributes="colspan python:len(portal_roles)"
                    i18n:translate="listingheader_roles">Roles</th>
                <th rowspan="2" i18n:translate="listignheader_remove_group">Remove Group</th>
            </tr>
            <tr>
                <tal:header repeat="portal_role portal_roles">
                <th tal:content="portal_role" i18n:translate="">Role</th>
                </tal:header>
            </tr>

            <tal:block repeat="this_group groups">

            <tr
                tal:define="oddrow repeat/this_group/odd"
                 tal:attributes="class python:test(oddrow,'odd','even')">

            <tal:block define="roles python:['this']">

            <td>
                <a href="prefs_group_details"
                   tal:attributes="href string:${here/absolute_url}/prefs_group_details?groupname=${this_group/getGroupName}">

                    <img src="" tal:replace="structure portal/group.gif" />&nbsp;
		    <tal:group tal:replace="this_group/getGroupName" />
                </a>
            </td>

            <td class="checkbox"
                tal:define="group_roles python:this_group.getRoles();"
                tal:repeat="portal_role portal_roles">

                <input type="checkbox"
                       class="noborder"
                       name="name"
                       value="Manager"
                       tal:attributes="name string:group_${this_group/getGroupName}:list;
                                       value portal_role;
                                       checked python:test(portal_role in group_roles, 'checked' ,'');" />
            </td>

            <td class="checkbox">
                <input type="checkbox"
                       class="noborder notify"
                       name="delete:list"
                       value="value"
                       tal:attributes="value this_group/getGroupName" />
            </td>

            </tal:block>
        </tr>
        </tal:block>
        </table>

        <input class="context"
               tabindex=""
               type="submit"
               name="prefs_group_manage:method"
               value="Save"
               tal:attributes="tabindex tabindex/next;"
               i18n:attributes="value"
               />

    </form>

    <h1 i18n:translate="heading_roles_management">Roles Management</h1>

    <p i18n:translate="description_roles_management">
      Roles are collections of permissions. The most common role is
      the Member role, which is any member of the portal. You can
      define additional roles, but you normally only do that when you
      need to create a new discrete unit of permissions that you can
      combine to make up a Group.
    </p>

</div>

</div>

</body>
</html>

