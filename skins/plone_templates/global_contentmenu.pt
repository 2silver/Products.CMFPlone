<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      i18n:domain="plone">

<body>

<metal:menubarmacro define-macro="contentMenu">

<ul tal:define="contentTypes allowed_types;
        filterOut here/getNotAddableTypes;
        size python:len(contentTypes);
        folder python:test(getattr(here.aq_explicit, 'isPrincipiaFolderish', 0), here, here.getParentNode());">

    <tal:states define="review_state wf_state;
                        transitions workflow_actions;"
                condition="python:review_state">

    <li tal:condition="not: transitions"
        class="actionSingular">
        <tal:state i18n:translate="label_state">State</tal:state>:
        <span tal:content="review_state"
              tal:attributes="class string:state-${review_state}"
              i18n:translate="">
        Workflow state
        </span>
    </li>


    <li class="actionPlural" tal:condition="transitions">

        <div class="menuPosition">
            <ul class="actionMenu"
                id="statusMenu"
                onmouseover="menuMouseover(event)">  
                <tal:block repeat="transition transitions">
                <li>
                    <a href="#"
                       onMouseUp="if (activeButton != null) resetButton(activeButton);" 
                       i18n:translate=""
                       tal:content="transition/name"
                       i18n:attributes="title"
                       tal:attributes="href string:$here_url/content_status_modify?workflow_action=${transition/id};
                                       title transition/name">File Menu Item 1</a>
                </li>
                </tal:block>
                <li class="actionSeperator">
                    <a href="#" 
                       tal:attributes="href string:$here_url/content_status_history"
                       i18n:translate="label_advanced">Advanced</a>
                </li>
            </ul>
    
             <a href="#"
                onclick="return buttonClick(event, 'statusMenu');"
                onmouseover="buttonMouseover(event, 'statusMenu');">
    
                <span i18n:translate="label_state">State</span>:
        
                <span tal:content="review_state"
                         tal:attributes="class string:state-${review_state}"
                         i18n:translate="">
                Workflow state
                </span>
            </a>
        </div>

    </li>
    
    </tal:states>

    <tal:dropdown tal:condition="python: size>1">

    <li>
        <div class="menuPosition">
            <a href="#"
               title="Add new items to this folder"
               onclick="return buttonClick(event, 'objectMenu');"
               onmouseover="buttonMouseover(event, 'objectMenu');"
               i18n:attributes="title">
               <span i18n:translate="label_add_new_item">Add New Item</span></a>
    
            <ul class="actionMenu" id="objectMenu"
                onmouseover="menuMouseover(event)">
                <metal:block tal:repeat="ctype contentTypes"> 
                <li tal:define="Title ctype/Title;Id ctype/getId">
                    <a href="#" 
                       onMouseUp="if (activeButton != null) resetButton(activeButton);"
                       tal:define="folder python:test(getattr(here.aq_explicit, 'isPrincipiaFolderish', 0), here, here.getParentNode())"
                       i18n:attributes="title"
                       tal:attributes="href python:folder.absolute_url()+'/createObject?type_name='+Id;
                                       title Title">
                      <img src="folder.gif" 
                           alt="" 
                           width="16" 
                           height="16" 
                           tal:attributes="src string:$portal_url/${ctype/getIcon}" />
                      <tal:title i18n:translate=""
                                 tal:content="Title">Title</tal:title>
                    </a>
                </li>
                </metal:block>
            </ul>
        </div>
    </li>
    </tal:dropdown>

    <li tal:condition="python: size==1 and allowedSortedContentTypes[0].getId() not in filterOut"
        class="actionSingular">
        <a href="#" 
           tal:define="portaltype python: contentTypes[0];"
           tal:attributes="href string:${folder/absolute_url}/createObject?type_name=${portaltype/getId}"
           >
            <img src="folder.gif" 
                 alt="" 
                 width="16" 
                 height="16" 
                 tal:attributes="src string:$portal_url/${portaltype/getIcon}"/>
            <span tal:define="ttype python:here.translate(portaltype.Title())"
                  tal:replace="python:here.translate('Add ${type}', {'type':ttype})" />
        </a>
    </li>



    <tal:templateMixin define="contextHasIndexHtml context/hasIndexHtml;
                               folderHasIndexHtml folder/hasIndexHtml;
                               parentVocab folder/getSelectableViews;
                               contextVocab here/getSelectableViews;
                               canSelectDefaultFolderPage folder/canSelectDefaultPage;
                               canSelectDefaultContextPage here/canSelectDefaultPage;
                               isContextDefaultPage here/isDefaultPageInFolder;
                               showMenu python:(context is folder and not contextHasIndexHtml) or 
                                               (isContextDefaultPage and not folderHasIndexHtml);
                               "
                        condition="python:parentVocab or contextVocab or canSelectDefaultFolderPage or canSelectDefaultContextPage">

        <li>
        <span tal:replace="python:(isContextDefaultPage and not folderHasIndexHtml)"/>
        <span tal:replace="folderHasIndexHtml"/>
        
        </li>
        
        <li>
        
            <div class="menuPosition">
                
                <span title="Delete or rename the index_html item to gain full control over how this folder is displayed."
                   i18n:attributes="title"
                   class="disabled"
                   tal:condition="not:showMenu">
                    <span i18n:translate="label_disabled_display_menu">Display</span>
                </span>
                
                
                <a href="#"
                   title="Choose default view"
                   onclick="return buttonClick(event, 'templateMenu');"
                   onmouseover="buttonMouseover(event, 'templateMenu');"
                   i18n:attributes="title"
                   tal:condition="showMenu">
                    <span i18n:translate="label_choose_template">Display</span>
                </a>

                <ul class="actionMenu" id="templateMenu"
                    onmouseover="menuMouseover(event)">
                    
                    <!-- Parent Views menu -->
                    <tal:parentViews define="vocab parentVocab;
                                             actualLayout folder/getLayout|nothing;
                                             selectedLayout python:test(isContextDefaultPage, '', actualLayout)"
                                     condition="python:vocab and isContextDefaultPage">
                    <tal:layouts repeat="layout vocab">
                    <li tal:define="value layout;
                                    display python:here.translate(vocab.getMsgId(value), default=vocab.getValue(value));">
                        <!--XXX style attribute has to be changed to a css class in following tag  -->
                        <span style="white-space:nowrap;"
                              tal:condition="python:value==selectedLayout"
                              i18n:translate=""
                              class="selected"
                              tal:content="display">Template id</span>
                        <a href="#"
                           onMouseUp="if (activeButton != null) resetButton(activeButton);"
                           tal:condition="python:value!=selectedLayout"
                           tal:attributes="href string:${folder/absolute_url}/selectViewTemplate?templateId=$value;
                                           title display"
                           i18n:attributes="title">
                            <tal:title i18n:translate=""
                                 tal:content="display">Template id</tal:title>
                        </a>
                    </li>
                    </tal:layouts>

                    <!-- XXX ISelectableDefaultPage will probably be moved to Archetpes -->
                    <tal:block condition="canSelectDefaultFolderPage">
                        <li tal:condition="python:selectedLayout != ''">
                            <a title="Select default page" href="#" class="selected"
                               onMouseUp="if (activeButton != null) resetButton(activeButton);"
                               tal:attributes="href string:${folder/absolute_url}/select_default_page;"
                               i18n:attributes="title">
                                 Select item...
                            </a>
                        </li>
                        <li tal:condition="python:selectedLayout == ''">
                            <a title="Change default page" href="#" class="selected"
                               onMouseUp="if (activeButton != null) resetButton(activeButton);"
                               tal:attributes="href string:${folder/absolute_url}/select_default_page;"
                               i18n:attributes="title">
                                 Change item...
                            </a>
                        </li>
                    </tal:block>
                    
                    </tal:parentViews>

                    <!-- Context Views menu -->
                    <tal:contextViews define="vocab contextVocab;
                                             actualLayout context/getLayout|nothing;
                                             selectedLayout python:test(isContextDefaultPage, '', actualLayout)"
                                     condition="python:vocab">
                                     
                    <tal:layouts repeat="layout vocab">
                    
                    <li tal:define="value layout;
                                    display python:here.translate(vocab.getMsgId(value), default=vocab.getValue(value));">
                        <!--XXX style attribute has to be changed to a css class in following tag  -->
                        <span style="white-space:nowrap;"
                              tal:condition="python:value==selectedLayout"
                              i18n:translate=""
                              class="selected"
                              tal:content="display">Template id</span>
                        <a href="#"
                           onMouseUp="if (activeButton != null) resetButton(activeButton);"
                           tal:condition="python:value!=selectedLayout"
                           tal:attributes="href string:${folder/absolute_url}/selectViewTemplate?templateId=$value;
                                           title display"
                           i18n:attributes="title">
                            <tal:title i18n:translate=""
                                 tal:content="display">Template id</tal:title>
                        </a>
                    </li>
                    </tal:layouts>

                    <!-- XXX ISelectableDefaultPage will probably be moved to Archetpes -->
                    <tal:block condition="canSelectDefaultFolderPage">
                        <li tal:condition="python:selectedLayout != ''">
                            <a title="Select default page" href="#" class="selected"
                               onMouseUp="if (activeButton != null) resetButton(activeButton);"
                               tal:attributes="href string:${folder/absolute_url}/select_default_page;"
                               i18n:attributes="title">
                                 Select item...
                            </a>
                        </li>
                        <li tal:condition="python:selectedLayout == ''">
                            <a title="Change default page" href="#" class="selected"
                               onMouseUp="if (activeButton != null) resetButton(activeButton);"
                               tal:attributes="href string:${folder/absolute_url}/select_default_page;"
                               i18n:attributes="title">
                                 Change item...
                            </a>
                        </li>
                    </tal:block>
                    
                    </tal:contextViews>

            </ul>
        </div>
    </li>
    </tal:templateMixin>




</ul>

</metal:menubarmacro>
</body>
</html>

