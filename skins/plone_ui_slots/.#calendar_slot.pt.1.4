<div metal:define-macro="calendarBox"
     class="container"
     tal:define="DateTime python:modules['DateTime'].DateTime;
                 current python:DateTime();
                 month python:request.get('month', DateTime().month());
                 year python:request.get('year', DateTime().year());
                 prevMonthTime python:here.getPreviousMonth(month, year);
                 nextMonthTime python:here.getNextMonth(month, year);
                 weeks python:here.portal_calendar.getEventsForCalendar(month=month, year=year);">
    <!-- The calendar, rendered as a table -->

    <table cellpadding="2" cellspacing="0" border="0" class="calendar" id="thecalendar">

        <tr>
            <th>
                <a href="#" tal:attributes="href python:'%s?month:int=%d&year:int=%d' % (here.absolute_url()+'/'+template.getId(),prevMonthTime.month(),prevMonthTime.year())">&laquo;</a>
            </th>

            <th colspan="5" tal:define="date string:$month/1/$year">
              <span tal:replace="python:DateTime(date).strftime('%B').capitalize()"/> <span tal:replace="python:DateTime(date).year()"/>
            </th>

            <th>
                <a href="#" tal:attributes="href python:'%s?month:int=%d&year:int=%d' % (here.absolute_url()+'/'+template.getId(),nextMonthTime.month(),nextMonthTime.year())">&raquo;</a>
            </th>

        <tr tal:define="weekdays here/portal_calendar/getDays">
          <span tal:repeat="weekday weekdays" tal:omit-tag="">
            <td class="weekdays" tal:content="weekday">Su</td>
          </span>
        </tr>

            <tr tal:repeat="week weeks">
              <span tal:define="days week" tal:omit-tag="">
                <span tal:repeat="day days" tal:omit-tag="">
                  <span tal:condition="day/event" tal:omit-tag="">
                  <span tal:define="daynumber day/day;
                                    datestring python: '%d%0.2d%0.2d' % (year, month, daynumber);
                                    javascriptstring string:javascript:%sDay('%s');;">
                  <td class="event"
                      tal:attributes="onMouseOut  python: javascriptstring % ('hide', datestring);
                                      onMouseOver python: javascriptstring % ('show', datestring);
                                      class       python:test(current.year()==year and current.month()==month and current.day()==int(daynumber), 'todayevent', 'event')">
                    <span tal:define="begEndTimes python:here.getBeginAndEndTimes(day=day['day'], month=month, year=year)" tal:omit-tag="">
                      <span tal:define="begin python:DateTime(begEndTimes[0].timeTime()+86400).ISO();
                                        end python:DateTime(begEndTimes[1].strftime('%m/%d/%y')).ISO();
                                        pss python:modules['Products'].PythonScripts.standard" tal:omit-tag="">
                      <a href tal:attributes="href python:here.portal_url()+'/search?start:date=%s&start_usage=range:max&end:date=%s&end_usage=range:min'%(pss.url_quote(begin),pss.url_quote(end))">
                        <span tal:replace="python: day['day'] or default">&nbsp;</span>
                      </a>
                      </span>
                    </span>
                  </td>
                  </span>
                  </span>
                  <td tal:condition="not: day/event"
                                      tal:content="python: day['day'] or default"
                                      tal:attributes="class python:test(current.year()==year and current.month()==month and current.day()==int(day['day']), 'todaynoevent', '')">
                    &nbsp;
                  </td>
                </span>
              </span>
            </tr>

    </table>

    <comment tal:condition="nothing">
<!-- This style section has to be created dynamically, it's responsible
                 for offsetting the different yellow boxes. The algorithm is
                 illustrated in the comments of the first one. -->

    <!-- This how the positions get calculated

          #day20010411 {
              position: absolute;
              top: 10em;  /* (2 + (2 * row)) em */
              left: 7em; /* (3 + (column*2)) em */
          }
    -->

    </comment>

    <!-- The sticky notes -->
    <span tal:repeat="week weeks" tal:omit-tag="">
      <span tal:define="days week" tal:omit-tag="">
        <span tal:repeat="day days" tal:omit-tag="">

          <div class="day" id="day20010411" tal:attributes="id python:'day%d%0.2d%0.2d' % (year, month, day['day']) "
               tal:condition="day/event">

            <div class="date" tal:content="python:'%d-%0.2d-%0.2d' % (year, month, day['day'])">
              2001-04-11
            </div>

              <span tal:repeat="anevent day/eventslist" tal:omit-tag="">
                <div class="appointment" tal:content="python: here.getEventString(event=anevent)">an event</div>
              </span>
          </div>

        </span>
      </span>
    </span>
    <style type="text/css" tal:content="python: here.getPopupPositionStyles(weeks=weeks, year=year, month=month)">
    </style>


</div>
