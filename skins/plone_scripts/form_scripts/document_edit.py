## Script (Python) "document_edit"
##parameters=text_format, field_text, file='', SafetyBelt='', choice=' Change ', field_title='', field_description='', field_id=''
##title=Edit a document
from Products.CMFPlone import transaction_note
REQUEST=context.REQUEST

id, text, title, description = field_id, field_text, field_title, field_description
idIsAutogenerated=context.isIDAutoGenerated(id)
if not idIsAutogenerated:
    REQUEST.set('id', id)

errors=context.validate_document_edit(file=file)

if REQUEST.has_key('errors'):
    edit_form=getattr(context, context.getTypeInfo().getActionById( 'edit'))
    return edit_form()

filename=getattr(file, 'filename', '')
if file and filename and idIsAutogenerated:
    id=filename[max( string.rfind(filename, '/')
                   , string.rfind(filename, '\\')
                   , string.rfind(filename, ':') )+1:]

qst='portal_status_message=Document+changed.'

context.extened_edit()

#we need to do this afterwards because metadata sets the format to the context's format
#we need to change the format to the one in the form, not the current format.
if file and filename:
    file.seek(0)

context.edit( text_format
            , text
            , file=file
            , safety_belt=SafetyBelt
            )
    
context.rename_object(redirect=0, id=id)

tmsg='/'.join(context.portal_url.getRelativeContentPath(context)[:-1])+'/'+context.title_or_id()+' has been modified.'
transaction_note(tmsg)
target_action = context.getTypeInfo().getActionById( 'view' )
context.REQUEST.RESPONSE.redirect( '%s/%s?%s' % ( context.absolute_url()
                                                , target_action
                                                , qst
                                                ) )



